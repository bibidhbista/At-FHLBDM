USE MIDOC_FIDUCIARY_BASE
-- 5 PK'S LEFT
-- with right order for locationcd (duplicate values: email justin H)
Alter Table [admCounters] Drop Constraint [PK_admCounters]; Alter Table [admCounters] Add Constraint [PK_admCounters] PRIMARY KEY CLUSTERED (CounterCd ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_admCounters_LocationCd') BEGIN  Drop INDEX [IX_admCounters_LocationCd] on [admCounters]; END Create NONCLUSTERED INDEX [IX_admCounters_LocationCd] on [admCounters] ( LocationCd ASC)
Alter Table [dmGLAccountCode] Drop Constraint [PK_dmGLAccountCode]; Alter Table [dmGLAccountCode] Add Constraint [PK_dmGLAccountCode] PRIMARY KEY CLUSTERED (GLAcctCdId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmGLAccountCode_LocationCd') BEGIN  Drop INDEX [IX_dmGLAccountCode_LocationCd] on [dmGLAccountCode]; END Create NONCLUSTERED INDEX [IX_dmGLAccountCode_LocationCd] on [dmGLAccountCode] ( LocationCd ASC)
Alter Table [dmGLAccountNames] Drop Constraint [PK_dmGLAccountNames]; Alter Table [dmGLAccountNames] Add Constraint [PK_dmGLAccountNames] PRIMARY KEY CLUSTERED (GLId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmGLAccountNames_LocationCd') BEGIN  Drop INDEX [IX_dmGLAccountNames_LocationCd] on [dmGLAccountNames]; END Create NONCLUSTERED INDEX [IX_dmGLAccountNames_LocationCd] on [dmGLAccountNames] ( LocationCd ASC)
Alter Table [dmIncomeCategories] Drop Constraint [PK_dmIncomeCategories]; Alter Table [dmIncomeCategories] Add Constraint [PK_dmIncomeCategories] PRIMARY KEY CLUSTERED (IncomeCategoryId ASc) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmIncomeCategories_LocationCd') BEGIN  Drop INDEX [IX_dmIncomeCategories_LocationCd] on [dmIncomeCategories]; END Create NONCLUSTERED INDEX [IX_dmIncomeCategories_LocationCd] on [dmIncomeCategories] ( LocationCd ASC)
Alter Table [dmModuleTypes] Drop Constraint [PK_dmModuleTypes]; Alter Table [dmModuleTypes] Add Constraint [PK_dmModuleTypes] PRIMARY KEY CLUSTERED (ModuleTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmModuleTypes_LocationCd') BEGIN  Drop INDEX [IX_dmModuleTypes_LocationCd] on [dmModuleTypes]; END Create NONCLUSTERED INDEX [IX_dmModuleTypes_LocationCd] on [dmModuleTypes] ( LocationCd ASC)
<<<<<<< HEAD

=======
Alter Table [H_dmMessages] Drop Constraint [PK_H_dmMessages]; Alter Table [H_dmMessages] Add Constraint [PK_H_dmMessages] PRIMARY KEY CLUSTERED (H_MessageId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_dmMessages_LocationCd') BEGIN  Drop INDEX [IX_H_dmMessages_LocationCd] on [H_dmMessages]; END Create NONCLUSTERED INDEX [IX_H_dmMessages_LocationCd] on [H_dmMessages] (LocationCd ASC)
>>>>>>> af568175bf89c0f28257f6cbc222ada1aaa4ce20


----------------------------------------------------------- *** COMPLETED *** --------------------------------------------------------------------------

-- both offendercd and locationcd
Alter Table [TempConsolidatedPrimaryAccount] Drop Constraint [PK_tempConsolidatedPrimaryAccount]; Alter Table [TempConsolidatedPrimaryAccount] Add Constraint [PK_tempConsolidatedPrimaryAccount] PRIMARY KEY CLUSTERED (LocationCd ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TempConsolidatedPrimaryAccount_OffenderCd') BEGIN  Drop INDEX [IX_TempConsolidatedPrimaryAccount_OffenderCd] on [TempConsolidatedPrimaryAccount]; END Create NONCLUSTERED INDEX [IX_TempConsolidatedPrimaryAccount_OffenderCd] on [TempConsolidatedPrimaryAccount] ( OffenderCd ASC)


-- only locationcd excluding History and tables that already include locationcd on NCI
Alter Table [FacilityPhoneNumberBlocks] Drop Constraint [PK_FacilityPhoneNumberBlocks]; Alter Table [FacilityPhoneNumberBlocks] Add Constraint [PK_FacilityPhoneNumberBlocks] PRIMARY KEY CLUSTERED (FacilityPhoneNumberBlockId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_FacilityPhoneNumberBlocks_LocationCd') BEGIN  Drop INDEX [IX_FacilityPhoneNumberBlocks_LocationCd] on [FacilityPhoneNumberBlocks]; END Create NONCLUSTERED INDEX [IX_FacilityPhoneNumberBlocks_LocationCd] on [FacilityPhoneNumberBlocks] (LocationCd Asc)
Alter Table [IBSAInterestDistribution] Drop Constraint [PK_IBSAInterestDistribution]; Alter Table [IBSAInterestDistribution] Add Constraint [PK_IBSAInterestDistribution] PRIMARY KEY CLUSTERED (IBSAInterestDistributionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_IBSAInterestDistribution_LocationCd') BEGIN  Drop INDEX [IX_IBSAInterestDistribution_LocationCd] on [IBSAInterestDistribution]; END Create NONCLUSTERED INDEX [IX_IBSAInterestDistribution_LocationCd] on [IBSAInterestDistribution] ( LocationCd Asc)
Alter Table [IBSAMonthlyInterest] Drop Constraint [PK_IBSAMonthlyInterest]; Alter Table [IBSAMonthlyInterest] Add Constraint [PK_IBSAMonthlyInterest] PRIMARY KEY CLUSTERED (IBSAMonthlyInterestId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_IBSAMonthlyInterest_LocationCd') BEGIN  Drop INDEX [IX_IBSAMonthlyInterest_LocationCd] on [IBSAMonthlyInterest]; END Create NONCLUSTERED INDEX [IX_IBSAMonthlyInterest_LocationCd] on [IBSAMonthlyInterest] ( LocationCd Asc)
Alter Table [IBSATransactionDetails] Drop Constraint [PK_IBSATransactionDetails]; Alter Table [IBSATransactionDetails] Add Constraint [PK_IBSATransactionDetails ASC] PRIMARY KEY CLUSTERED (PrimaryTransactionId) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_IBSATransactionDetails_LocationCd') BEGIN  Drop INDEX [IX_IBSATransactionDetails_LocationCd] on [IBSATransactionDetails]; END Create NONCLUSTERED INDEX [IX_IBSATransactionDetails_LocationCd] on [IBSATransactionDetails] ( LocationCd Asc )
Alter Table [ICSTransaction] Drop Constraint [PK_ICSTransaction]; Alter Table [ICSTransaction] Add Constraint [PK_ICSTransaction] PRIMARY KEY CLUSTERED (ICSTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_ICSTransaction_LocationCd') BEGIN  Drop INDEX [IX_ICSTransaction_LocationCd] on [ICSTransaction]; END Create NONCLUSTERED INDEX [IX_ICSTransaction_LocationCd] on [ICSTransaction] ( LocationCd Asc)
Alter Table [JPayTransactionExtract] Drop Constraint [PK_JPayTransactionExtract]; Alter Table [JPayTransactionExtract] Add Constraint [PK_JPayTransactionExtract] PRIMARY KEY CLUSTERED (JPayTransactionExtractId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_JPayTransactionExtract_LocationCd') BEGIN  Drop INDEX [IX_JPayTransactionExtract_LocationCd] on [JPayTransactionExtract]; END Create NONCLUSTERED INDEX [IX_JPayTransactionExtract_LocationCd] on [JPayTransactionExtract] ( LocationCd Asc)
Alter Table [KeefeTransactionExtract] Drop Constraint [PK_KeefeTransactionExtract]; Alter Table [KeefeTransactionExtract] Add Constraint [PK_KeefeTransactionExtract] PRIMARY KEY CLUSTERED (KeefeTransactionExtractId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_KeefeTransactionExtract_LocationCd') BEGIN  Drop INDEX [IX_KeefeTransactionExtract_LocationCd] on [KeefeTransactionExtract]; END Create NONCLUSTERED INDEX [IX_KeefeTransactionExtract_LocationCd] on [KeefeTransactionExtract] ( LocationCd Asc)
Alter Table [Parameters] Drop Constraint [PK_Parameters_1]; Alter Table [Parameters] Add Constraint [PK_Parameters_1] PRIMARY KEY CLUSTERED (ParameterId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Parameters_LocationCd') BEGIN  Drop INDEX [IX_Parameters_LocationCd] on [Parameters]; END Create NONCLUSTERED INDEX [IX_Parameters_LocationCd] on [Parameters] (LocationCd Asc )
Alter Table [SavingsTransactionDetails] Drop Constraint [PK_SavingsTransactionDetails]; Alter Table [SavingsTransactionDetails] Add Constraint [PK_SavingsTransactionDetails] PRIMARY KEY CLUSTERED (PrimaryTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_SavingsTransactionDetails_LocationCd') BEGIN  Drop INDEX [IX_SavingsTransactionDetails_LocationCd] on [SavingsTransactionDetails]; END Create NONCLUSTERED INDEX [IX_SavingsTransactionDetails_LocationCd] on [SavingsTransactionDetails] ( LocationCd Asc)
Alter Table [TouchPayTransactionExtract] Drop Constraint [PK_TouchPayTransactionExtract]; Alter Table [TouchPayTransactionExtract] Add Constraint [PK_TouchPayTransactionExtract] PRIMARY KEY CLUSTERED (TouchPayTransactionExtractId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TouchPayTransactionExtract_LocationCd') BEGIN  Drop INDEX [IX_TouchPayTransactionExtract_LocationCd] on [TouchPayTransactionExtract]; END Create NONCLUSTERED INDEX [IX_TouchPayTransactionExtract_LocationCd] on [TouchPayTransactionExtract] (LocationCd Asc )
Alter Table [UnknTransDetails] Drop Constraint [PK_UnknTransDetails]; Alter Table [UnknTransDetails] Add Constraint [PK_UnknTransDetails] PRIMARY KEY CLUSTERED (UnknTransDetailId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_UnknTransDetails_LocationCd') BEGIN  Drop INDEX [IX_UnknTransDetails_LocationCd] on [UnknTransDetails]; END Create NONCLUSTERED INDEX [IX_UnknTransDetails_LocationCd] on [UnknTransDetails] ( LocationCd Asc)
Alter Table [WithdrawalDetails] Drop Constraint [PK_WithdrawalDetail]; Alter Table [WithdrawalDetails] Add Constraint [PK_WithdrawalDetail] PRIMARY KEY CLUSTERED (PrimaryTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_WithdrawalDetails_LocationCd') BEGIN  Drop INDEX [IX_WithdrawalDetails_LocationCd] on [WithdrawalDetails]; END Create NONCLUSTERED INDEX [IX_WithdrawalDetails_LocationCd] on [WithdrawalDetails] (LocationCd Asc )
Alter Table [WUnionTransactionExtract] Drop Constraint [PK_WUnionTransactionExtract]; Alter Table [WUnionTransactionExtract] Add Constraint [PK_WUnionTransactionExtract] PRIMARY KEY CLUSTERED (WUnionTransactionExtractId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_WUnionTransactionExtract_LocationCd') BEGIN  Drop INDEX [IX_WUnionTransactionExtract_LocationCd] on [WUnionTransactionExtract]; END Create NONCLUSTERED INDEX [IX_WUnionTransactionExtract_LocationCd] on [WUnionTransactionExtract] (LocationCd Asc )

-- with right order for locationcd 
Alter Table [dmOptions] Drop Constraint [PK_dmOptions]; Alter Table [dmOptions] Add Constraint [PK_dmOptions] PRIMARY KEY CLUSTERED (OptionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmOptions_LocationCd') BEGIN  Drop INDEX [IX_dmOptions_LocationCd] on [dmOptions]; END Create NONCLUSTERED INDEX [IX_dmOptions_LocationCd] on [dmOptions] (LocationCd ASC)
Alter Table [dmKeefeOptions] Drop Constraint [PK_dmKeefeOptions]; Alter Table [dmKeefeOptions] Add Constraint [PK_dmKeefeOptions] PRIMARY KEY CLUSTERED (OptionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmKeefeOptions_LocationCd') BEGIN  Drop INDEX [IX_dmKeefeOptions_LocationCd] on [dmKeefeOptions]; END Create NONCLUSTERED INDEX [IX_dmKeefeOptions_LocationCd] on [dmKeefeOptions] ( LocationCd ASC)

Alter Table [admTableId] Drop Constraint [PK_admTableId]; Alter Table [admTableId] Add Constraint [PK_admTableId] PRIMARY KEY CLUSTERED (TableName ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_admTableId_LocationCd') BEGIN  Drop INDEX [IX_admTableId_LocationCd] on [admTableId]; END Create NONCLUSTERED INDEX [IX_admTableId_LocationCd] on [admTableId] ( LocationCd ASC)
Alter Table [AllowanceElectronicImport] Drop Constraint [PK_AllowanceElectronicImport]; Alter Table [AllowanceElectronicImport] Add Constraint [PK_AllowanceElectronicImport] PRIMARY KEY CLUSTERED (AllowanceElectronicImportId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_AllowanceElectronicImport_LocationCd') BEGIN  Drop INDEX [IX_AllowanceElectronicImport_LocationCd] on [AllowanceElectronicImport]; END Create NONCLUSTERED INDEX [IX_AllowanceElectronicImport_LocationCd] on [AllowanceElectronicImport] ( LocationCd ASC)
Alter Table [CBCFeeActivity] Drop Constraint [PK_CBCFeeActivity]; Alter Table [CBCFeeActivity] Add Constraint [PK_CBCFeeActivity] PRIMARY KEY CLUSTERED (CBCFeeActivityId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CBCFeeActivity_LocationCd') BEGIN  Drop INDEX [IX_CBCFeeActivity_LocationCd] on [CBCFeeActivity]; END Create NONCLUSTERED INDEX [IX_CBCFeeActivity_LocationCd] on [CBCFeeActivity] ( LocationCd ASC)
Alter Table [CBCFeeWaiver] Drop Constraint [PK_CBCFeeWaiver]; Alter Table [CBCFeeWaiver] Add Constraint [PK_CBCFeeWaiver] PRIMARY KEY CLUSTERED (CBCFeeWaiverId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CBCFeeWaiver_LocationCd') BEGIN  Drop INDEX [IX_CBCFeeWaiver_LocationCd] on [CBCFeeWaiver]; END Create NONCLUSTERED INDEX [IX_CBCFeeWaiver_LocationCd] on [CBCFeeWaiver] ( LocationCd ASC)
Alter Table [CBCFeeWriteOff] Drop Constraint [PK_CBCFeeWriteOff]; Alter Table [CBCFeeWriteOff] Add Constraint [PK_CBCFeeWriteOff] PRIMARY KEY CLUSTERED (CBCFeeWriteOffId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CBCFeeWriteOff_LocationCd') BEGIN  Drop INDEX [IX_CBCFeeWriteOff_LocationCd] on [CBCFeeWriteOff]; END Create NONCLUSTERED INDEX [IX_CBCFeeWriteOff_LocationCd] on [CBCFeeWriteOff] ( LocationCd ASC)
Alter Table [CommissaryTransactions] Drop Constraint [PK_CommissaryTransactions]; Alter Table [CommissaryTransactions] Add Constraint [PK_CommissaryTransactions] PRIMARY KEY CLUSTERED (TransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CommissaryTransactions_LocationCd') BEGIN  Drop INDEX [IX_CommissaryTransactions_LocationCd] on [CommissaryTransactions]; END Create NONCLUSTERED INDEX [IX_CommissaryTransactions_LocationCd] on [CommissaryTransactions] ( LocationCd ASC)
Alter Table [CommissaryWebServiceTransaction] Drop Constraint [PK_CommissaryWebServiceTransaction]; Alter Table [CommissaryWebServiceTransaction] Add Constraint [PK_CommissaryWebServiceTransaction] PRIMARY KEY CLUSTERED (PickTicketId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CommissaryWebServiceTransaction_LocationCd') BEGIN  Drop INDEX [IX_CommissaryWebServiceTransaction_LocationCd] on [CommissaryWebServiceTransaction]; END Create NONCLUSTERED INDEX [IX_CommissaryWebServiceTransaction_LocationCd] on [CommissaryWebServiceTransaction] ( LocationCd ASC)
Alter Table [DepositRoster] Drop Constraint [PK_DepositRoster]; Alter Table [DepositRoster] Add Constraint [PK_DepositRoster] PRIMARY KEY CLUSTERED (DepositRosterId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_DepositRoster_LocationCd') BEGIN  Drop INDEX [IX_DepositRoster_LocationCd] on [DepositRoster]; END Create NONCLUSTERED INDEX [IX_DepositRoster_LocationCd] on [DepositRoster] ( LocationCd ASC)
Alter Table [Deposits] Drop Constraint [PK_Deposits]; Alter Table [Deposits] Add Constraint [PK_Deposits] PRIMARY KEY CLUSTERED (DepositId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Deposits_LocationCd') BEGIN  Drop INDEX [IX_Deposits_LocationCd] on [Deposits]; END Create NONCLUSTERED INDEX [IX_Deposits_LocationCd] on [Deposits] ( LocationCd ASC)
Alter Table [DestroyedChecks] Drop Constraint [PK_DestroyedChecks]; Alter Table [DestroyedChecks] Add Constraint [PK_DestroyedChecks] PRIMARY KEY CLUSTERED (CheckNo ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_DestroyedChecks_LocationCd') BEGIN  Drop INDEX [IX_DestroyedChecks_LocationCd] on [DestroyedChecks]; END Create NONCLUSTERED INDEX [IX_DestroyedChecks_LocationCd] on [DestroyedChecks] ( LocationCd ASC)
Alter Table [dmAllowancesDept] Drop Constraint [PK_dmAllowancesDept]; Alter Table [dmAllowancesDept] Add Constraint [PK_dmAllowancesDept] PRIMARY KEY CLUSTERED (AllowancesDeptId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmAllowancesDept_LocationCd') BEGIN  Drop INDEX [IX_dmAllowancesDept_LocationCd] on [dmAllowancesDept]; END Create NONCLUSTERED INDEX [IX_dmAllowancesDept_LocationCd] on [dmAllowancesDept] ( LocationCd ASC)
Alter Table [dmAllowancesTypeOfWork] Drop Constraint [PK_dmAllowancesTypeOfWork]; Alter Table [dmAllowancesTypeOfWork] Add Constraint [PK_dmAllowancesTypeOfWork] PRIMARY KEY CLUSTERED (AllowancesTypeOfWorkId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmAllowancesTypeOfWork_LocationCd') BEGIN  Drop INDEX [IX_dmAllowancesTypeOfWork_LocationCd] on [dmAllowancesTypeOfWork]; END Create NONCLUSTERED INDEX [IX_dmAllowancesTypeOfWork_LocationCd] on [dmAllowancesTypeOfWork] ( LocationCd ASC)
Alter Table [dmAllowancesWorkAssign] Drop Constraint [PK_dmAllowancesWorkAssign]; Alter Table [dmAllowancesWorkAssign] Add Constraint [PK_dmAllowancesWorkAssign] PRIMARY KEY CLUSTERED (AllowancesWorkAssignId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmAllowancesWorkAssign_LocationCd') BEGIN  Drop INDEX [IX_dmAllowancesWorkAssign_LocationCd] on [dmAllowancesWorkAssign]; END Create NONCLUSTERED INDEX [IX_dmAllowancesWorkAssign_LocationCd] on [dmAllowancesWorkAssign] ( LocationCd ASC)
Alter Table [dmBlockReasons] Drop Constraint [PK_dmBlockReasons]; Alter Table [dmBlockReasons] Add Constraint [PK_dmBlockReasons] PRIMARY KEY CLUSTERED (BlockReasonId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmBlockReasons_LocationCd') BEGIN  Drop INDEX [IX_dmBlockReasons_LocationCd] on [dmBlockReasons]; END Create NONCLUSTERED INDEX [IX_dmBlockReasons_LocationCd] on [dmBlockReasons] ( LocationCd ASC)
Alter Table [dmCategories] Drop Constraint [PK_dmCategories]; Alter Table [dmCategories] Add Constraint [PK_dmCategories] PRIMARY KEY CLUSTERED (CategoryId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCategories_LocationCd') BEGIN  Drop INDEX [IX_dmCategories_LocationCd] on [dmCategories]; END Create NONCLUSTERED INDEX [IX_dmCategories_LocationCd] on [dmCategories] ( LocationCd ASC)
Alter Table [dmCBCFeesPaidTo] Drop Constraint [PK_dmCBCFeesPaidTo]; Alter Table [dmCBCFeesPaidTo] Add Constraint [PK_dmCBCFeesPaidTo] PRIMARY KEY CLUSTERED (CBCFeesPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCBCFeesPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmCBCFeesPaidTo_LocationCd] on [dmCBCFeesPaidTo]; END Create NONCLUSTERED INDEX [IX_dmCBCFeesPaidTo_LocationCd] on [dmCBCFeesPaidTo] ( LocationCd ASC)
Alter Table [dmCBCFeeWaiverType] Drop Constraint [PK_dmCBCFeeWaiverType]; Alter Table [dmCBCFeeWaiverType] Add Constraint [PK_dmCBCFeeWaiverType] PRIMARY KEY CLUSTERED (CBCFeeWaiverTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCBCFeeWaiverType_LocationCd') BEGIN  Drop INDEX [IX_dmCBCFeeWaiverType_LocationCd] on [dmCBCFeeWaiverType]; END Create NONCLUSTERED INDEX [IX_dmCBCFeeWaiverType_LocationCd] on [dmCBCFeeWaiverType] ( LocationCd ASC)
Alter Table [dmCBCFeeWriteOffType] Drop Constraint [PK_dmCBCFeeWriteOffType]; Alter Table [dmCBCFeeWriteOffType] Add Constraint [PK_dmCBCFeeWriteOffType] PRIMARY KEY CLUSTERED (CBCFeeWriteOffTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCBCFeeWriteOffType_LocationCd') BEGIN  Drop INDEX [IX_dmCBCFeeWriteOffType_LocationCd] on [dmCBCFeeWriteOffType]; END Create NONCLUSTERED INDEX [IX_dmCBCFeeWriteOffType_LocationCd] on [dmCBCFeeWriteOffType] ( LocationCd ASC)
Alter Table [dmChildSupportPaidTo] Drop Constraint [PK_dmChildSupportPaidTo]; Alter Table [dmChildSupportPaidTo] Add Constraint [PK_dmChildSupportPaidTo] PRIMARY KEY CLUSTERED (ChildSupportPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmChildSupportPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmChildSupportPaidTo_LocationCd] on [dmChildSupportPaidTo]; END Create NONCLUSTERED INDEX [IX_dmChildSupportPaidTo_LocationCd] on [dmChildSupportPaidTo] ( LocationCd ASC)
Alter Table [dmCountries] Drop Constraint [PK_dmCountries]; Alter Table [dmCountries] Add Constraint [PK_dmCountries] PRIMARY KEY CLUSTERED (CountryId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCountries_LocationCd') BEGIN  Drop INDEX [IX_dmCountries_LocationCd] on [dmCountries]; END Create NONCLUSTERED INDEX [IX_dmCountries_LocationCd] on [dmCountries] ( LocationCd ASC)
Alter Table [dmCourtFilingFeesPaidTo] Drop Constraint [PK_dmCourtFilingFeesPaidTo]; Alter Table [dmCourtFilingFeesPaidTo] Add Constraint [PK_dmCourtFilingFeesPaidTo] PRIMARY KEY CLUSTERED (CourtFilingFeesPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmCourtFilingFeesPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmCourtFilingFeesPaidTo_LocationCd] on [dmCourtFilingFeesPaidTo]; END Create NONCLUSTERED INDEX [IX_dmCourtFilingFeesPaidTo_LocationCd] on [dmCourtFilingFeesPaidTo] ( LocationCd ASC)
Alter Table [dmDOCSanctionsPaidTo] Drop Constraint [PK_dmDOCSanctionsPaidTo]; Alter Table [dmDOCSanctionsPaidTo] Add Constraint [PK_dmDOCSanctionsPaidTo] PRIMARY KEY CLUSTERED (DOCSanctionPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmDOCSanctionsPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmDOCSanctionsPaidTo_LocationCd] on [dmDOCSanctionsPaidTo]; END Create NONCLUSTERED INDEX [IX_dmDOCSanctionsPaidTo_LocationCd] on [dmDOCSanctionsPaidTo] ( LocationCd ASC)
Alter Table [dmExpenditures] Drop Constraint [PK_dmExpenditures]; Alter Table [dmExpenditures] Add Constraint [PK_dmExpenditures] PRIMARY KEY CLUSTERED (ExpenditureId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmExpenditures_LocationCd') BEGIN  Drop INDEX [IX_dmExpenditures_LocationCd] on [dmExpenditures]; END Create NONCLUSTERED INDEX [IX_dmExpenditures_LocationCd] on [dmExpenditures] ( LocationCd ASC)

Alter Table [dmGLTransactionType] Drop Constraint [PK_dmGLTransactionType]; Alter Table [dmGLTransactionType] Add Constraint [PK_dmGLTransactionType] 
PRIMARY KEY CLUSTERED (GLTransactionTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); 
IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmGLTransactionType_LocationCd') BEGIN  Drop INDEX [IX_dmGLTransactionType_LocationCd] on [dmGLTransactionType]; END Create NONCLUSTERED INDEX [IX_dmGLTransactionType_LocationCd] on [dmGLTransactionType] ( LocationCd ASC)

Alter Table [dmHazardTypes] Drop Constraint [PK_dmHazardTypes]; Alter Table [dmHazardTypes] Add Constraint [PK_dmHazardTypes] PRIMARY KEY CLUSTERED (HazardTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmHazardTypes_LocationCd') BEGIN  Drop INDEX [IX_dmHazardTypes_LocationCd] on [dmHazardTypes]; END Create NONCLUSTERED INDEX [IX_dmHazardTypes_LocationCd] on [dmHazardTypes] ( LocationCd ASC)
Alter Table [dmICSLocations] Drop Constraint [PK_dmICSLocations]; Alter Table [dmICSLocations] Add Constraint [PK_dmICSLocations] PRIMARY KEY CLUSTERED (Status ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmICSLocations_LocationCd') BEGIN  Drop INDEX [IX_dmICSLocations_LocationCd] on [dmICSLocations]; END Create NONCLUSTERED INDEX [IX_dmICSLocations_LocationCd] on [dmICSLocations] ( LocationCd ASC)
Alter Table [dmIncomeTypes] Drop Constraint [PK_dmIncomeTypes]; Alter Table [dmIncomeTypes] Add Constraint [PK_dmIncomeTypes] PRIMARY KEY CLUSTERED (IncomeTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmIncomeTypes_LocationCd') BEGIN  Drop INDEX [IX_dmIncomeTypes_LocationCd] on [dmIncomeTypes]; END Create NONCLUSTERED INDEX [IX_dmIncomeTypes_LocationCd] on [dmIncomeTypes] ( LocationCd ASC)
Alter Table [dmItems] Drop Constraint [PK_dmItems]; Alter Table [dmItems] Add Constraint [PK_dmItems] PRIMARY KEY CLUSTERED (ItemId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmItems_LocationCd') BEGIN  Drop INDEX [IX_dmItems_LocationCd] on [dmItems]; END Create NONCLUSTERED INDEX [IX_dmItems_LocationCd] on [dmItems] ( LocationCd ASC)
Alter Table [dmJPayOptions] Drop Constraint [PK_dmJPayOptions]; Alter Table [dmJPayOptions] Add Constraint [PK_dmJPayOptions] PRIMARY KEY CLUSTERED (OptionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmJPayOptions_LocationCd') BEGIN  Drop INDEX [IX_dmJPayOptions_LocationCd] on [dmJPayOptions]; END Create NONCLUSTERED INDEX [IX_dmJPayOptions_LocationCd] on [dmJPayOptions] ( LocationCd ASC)
Alter Table [dmLocationCheckInfo] Drop Constraint [PK_dmLocationCheckInfo]; Alter Table [dmLocationCheckInfo] Add Constraint [PK_dmLocationCheckInfo] PRIMARY KEY CLUSTERED (LocationCheckInfoId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmLocationCheckInfo_LocationCd') BEGIN  Drop INDEX [IX_dmLocationCheckInfo_LocationCd] on [dmLocationCheckInfo]; END Create NONCLUSTERED INDEX [IX_dmLocationCheckInfo_LocationCd] on [dmLocationCheckInfo] ( LocationCd ASC)
Alter Table [dmManualPaidTo] Drop Constraint [PK_dmManualPaidTo]; Alter Table [dmManualPaidTo] Add Constraint [PK_dmManualPaidTo] PRIMARY KEY CLUSTERED (ManualPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmManualPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmManualPaidTo_LocationCd] on [dmManualPaidTo]; END Create NONCLUSTERED INDEX [IX_dmManualPaidTo_LocationCd] on [dmManualPaidTo] ( LocationCd ASC)
Alter Table [dmMessages] Drop Constraint [PK_dmMessages]; Alter Table [dmMessages] Add Constraint [PK_dmMessages] PRIMARY KEY CLUSTERED (MessageId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmMessages_LocationCd') BEGIN  Drop INDEX [IX_dmMessages_LocationCd] on [dmMessages]; END Create NONCLUSTERED INDEX [IX_dmMessages_LocationCd] on [dmMessages] ( LocationCd ASC)

Alter Table [dmMoneyType] Drop Constraint [PK_dmMoneyType]; Alter Table [dmMoneyType] Add Constraint [PK_dmMoneyType] PRIMARY KEY CLUSTERED (MoneyTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmMoneyType_LocationCd') BEGIN  Drop INDEX [IX_dmMoneyType_LocationCd] on [dmMoneyType]; END Create NONCLUSTERED INDEX [IX_dmMoneyType_LocationCd] on [dmMoneyType] ( LocationCd ASC)
Alter Table [dmObligationTypes] Drop Constraint [PK_dmObligationTypes]; Alter Table [dmObligationTypes] Add Constraint [PK_dmObligationTypes] PRIMARY KEY CLUSTERED (ObligationTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmObligationTypes_LocationCd') BEGIN  Drop INDEX [IX_dmObligationTypes_LocationCd] on [dmObligationTypes]; END Create NONCLUSTERED INDEX [IX_dmObligationTypes_LocationCd] on [dmObligationTypes] ( LocationCd ASC)
Alter Table [dmOffenderOrganizations] Drop Constraint [PK_dmOffenderOrganizations]; Alter Table [dmOffenderOrganizations] Add Constraint [PK_dmOffenderOrganizations] PRIMARY KEY CLUSTERED (InternalOrganizationID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmOffenderOrganizations_LocationCd') BEGIN  Drop INDEX [IX_dmOffenderOrganizations_LocationCd] on [dmOffenderOrganizations]; END Create NONCLUSTERED INDEX [IX_dmOffenderOrganizations_LocationCd] on [dmOffenderOrganizations] ( LocationCd ASC)

Alter Table [dmPredefinedGroups] Drop Constraint [PK_dmPredefinedGroups]; Alter Table [dmPredefinedGroups] Add Constraint [PK_dmPredefinedGroups] PRIMARY KEY CLUSTERED (GroupId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmPredefinedGroups_LocationCd') BEGIN  Drop INDEX [IX_dmPredefinedGroups_LocationCd] on [dmPredefinedGroups]; END Create NONCLUSTERED INDEX [IX_dmPredefinedGroups_LocationCd] on [dmPredefinedGroups] ( LocationCd ASC)
Alter Table [dmPrivateSectorEmployer] Drop Constraint [PK_dmPrivateSectorEmployer]; Alter Table [dmPrivateSectorEmployer] Add Constraint [PK_dmPrivateSectorEmployer] PRIMARY KEY CLUSTERED (PrivateSectorEmployerId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmPrivateSectorEmployer_LocationCd') BEGIN  Drop INDEX [IX_dmPrivateSectorEmployer_LocationCd] on [dmPrivateSectorEmployer]; END Create NONCLUSTERED INDEX [IX_dmPrivateSectorEmployer_LocationCd] on [dmPrivateSectorEmployer] ( LocationCd ASC)
Alter Table [dmRentStatus] Drop Constraint [PK_dmRentStatus]; Alter Table [dmRentStatus] Add Constraint [PK_dmRentStatus] PRIMARY KEY CLUSTERED (RentStatusId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmRentStatus_LocationCd') BEGIN  Drop INDEX [IX_dmRentStatus_LocationCd] on [dmRentStatus]; END Create NONCLUSTERED INDEX [IX_dmRentStatus_LocationCd] on [dmRentStatus] ( LocationCd ASC)
Alter Table [dmRestitutionPaidTo] Drop Constraint [PK_dmRestitutionPaidTo]; Alter Table [dmRestitutionPaidTo] Add Constraint [PK_dmRestitutionPaidTo] PRIMARY KEY CLUSTERED (RestitutionPaidToId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmRestitutionPaidTo_LocationCd') BEGIN  Drop INDEX [IX_dmRestitutionPaidTo_LocationCd] on [dmRestitutionPaidTo]; END Create NONCLUSTERED INDEX [IX_dmRestitutionPaidTo_LocationCd] on [dmRestitutionPaidTo] ( LocationCd ASC)
Alter Table [dmScreens] Drop Constraint [PK_dmScreens]; Alter Table [dmScreens] Add Constraint [PK_dmScreens] PRIMARY KEY CLUSTERED (UserID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmScreens_LocationCd') BEGIN  Drop INDEX [IX_dmScreens_LocationCd] on [dmScreens]; END Create NONCLUSTERED INDEX [IX_dmScreens_LocationCd] on [dmScreens] ( LocationCd ASC)
Alter Table [dmState] Drop Constraint [PK_dmState]; Alter Table [dmState] Add Constraint [PK_dmState] PRIMARY KEY CLUSTERED (StateAbbr ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmState_LocationCd') BEGIN  Drop INDEX [IX_dmState_LocationCd] on [dmState]; END Create NONCLUSTERED INDEX [IX_dmState_LocationCd] on [dmState] ( LocationCd ASC)
Alter Table [dmTouchPayOptions] Drop Constraint [PK_dmTouchPayOptions]; Alter Table [dmTouchPayOptions] Add Constraint [PK_dmTouchPayOptions] PRIMARY KEY CLUSTERED (OptionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmTouchPayOptions_LocationCd') BEGIN  Drop INDEX [IX_dmTouchPayOptions_LocationCd] on [dmTouchPayOptions]; END Create NONCLUSTERED INDEX [IX_dmTouchPayOptions_LocationCd] on [dmTouchPayOptions] ( LocationCd ASC)
Alter Table [dmTransactionCategories] Drop Constraint [PK_dmTransactionCategories]; Alter Table [dmTransactionCategories] Add Constraint [PK_dmTransactionCategories] PRIMARY KEY CLUSTERED (TransactionCategoryId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmTransactionCategories_LocationCd') BEGIN  Drop INDEX [IX_dmTransactionCategories_LocationCd] on [dmTransactionCategories]; END Create NONCLUSTERED INDEX [IX_dmTransactionCategories_LocationCd] on [dmTransactionCategories] ( LocationCd ASC)
Alter Table [dmTransactionTypes] Drop Constraint [PK_dmTransactionTypes]; Alter Table [dmTransactionTypes] Add Constraint [PK_dmTransactionTypes] PRIMARY KEY CLUSTERED (TransactionTypeId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmTransactionTypes_LocationCd') BEGIN  Drop INDEX [IX_dmTransactionTypes_LocationCd] on [dmTransactionTypes]; END Create NONCLUSTERED INDEX [IX_dmTransactionTypes_LocationCd] on [dmTransactionTypes] ( LocationCd ASC)
Alter Table [dmUsers] Drop Constraint [PK_dmUsers]; Alter Table [dmUsers] Add Constraint [PK_dmUsers] PRIMARY KEY CLUSTERED (UserID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmUsers_LocationCd') BEGIN  Drop INDEX [IX_dmUsers_LocationCd] on [dmUsers]; END Create NONCLUSTERED INDEX [IX_dmUsers_LocationCd] on [dmUsers] ( LocationCd ASC)
Alter Table [dmWUnionOptions] Drop Constraint [PK_dmWUnionOptions]; Alter Table [dmWUnionOptions] Add Constraint [PK_dmWUnionOptions] PRIMARY KEY CLUSTERED (OptionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmWUnionOptions_LocationCd') BEGIN  Drop INDEX [IX_dmWUnionOptions_LocationCd] on [dmWUnionOptions]; END Create NONCLUSTERED INDEX [IX_dmWUnionOptions_LocationCd] on [dmWUnionOptions] ( LocationCd ASC)
Alter Table [EnteredPhoneCredits] Drop Constraint [PK_EnteredPhoneCredits]; Alter Table [EnteredPhoneCredits] Add Constraint [PK_EnteredPhoneCredits] PRIMARY KEY CLUSTERED (PhoneCreditID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_EnteredPhoneCredits_LocationCd') BEGIN  Drop INDEX [IX_EnteredPhoneCredits_LocationCd] on [EnteredPhoneCredits]; END Create NONCLUSTERED INDEX [IX_EnteredPhoneCredits_LocationCd] on [EnteredPhoneCredits] ( LocationCd ASC)
Alter Table [FacilityPhoneNumberControls] Drop Constraint [PK_FacilityPhoneNumberControls]; Alter Table [FacilityPhoneNumberControls] Add Constraint [PK_FacilityPhoneNumberControls] PRIMARY KEY CLUSTERED (FacilityPhoneNumberControlId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_FacilityPhoneNumberControls_LocationCd') BEGIN  Drop INDEX [IX_FacilityPhoneNumberControls_LocationCd] on [FacilityPhoneNumberControls]; END Create NONCLUSTERED INDEX [IX_FacilityPhoneNumberControls_LocationCd] on [FacilityPhoneNumberControls] ( LocationCd ASC)
Alter Table [GLAssignments] Drop Constraint [PK_GLAssignments]; Alter Table [GLAssignments] Add Constraint [PK_GLAssignments] PRIMARY KEY CLUSTERED (GLAssignmentId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_GLAssignments_LocationCd') BEGIN  Drop INDEX [IX_GLAssignments_LocationCd] on [GLAssignments]; END Create NONCLUSTERED INDEX [IX_GLAssignments_LocationCd] on [GLAssignments] ( LocationCd ASC)
Alter Table [GLTransaction] Drop Constraint [PK_GLTransaction]; Alter Table [GLTransaction] Add Constraint [PK_GLTransaction] PRIMARY KEY CLUSTERED (GLTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_GLTransaction_LocationCd') BEGIN  Drop INDEX [IX_GLTransaction_LocationCd] on [GLTransaction]; END Create NONCLUSTERED INDEX [IX_GLTransaction_LocationCd] on [GLTransaction] ( LocationCd ASC)
Alter Table [Groups] Drop Constraint [PK_Groups]; Alter Table [Groups] Add Constraint [PK_Groups] PRIMARY KEY CLUSTERED (GroupId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Groups_LocationCd') BEGIN  Drop INDEX [IX_Groups_LocationCd] on [Groups]; END Create NONCLUSTERED INDEX [IX_Groups_LocationCd] on [Groups] ( LocationCd ASC)
Alter Table [GroupUsers] Drop Constraint [PK_GroupUsers]; Alter Table [GroupUsers] Add Constraint [PK_GroupUsers] PRIMARY KEY CLUSTERED (GroupUserId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_GroupUsers_LocationCd') BEGIN  Drop INDEX [IX_GroupUsers_LocationCd] on [GroupUsers]; END Create NONCLUSTERED INDEX [IX_GroupUsers_LocationCd] on [GroupUsers] ( LocationCd ASC)
Alter Table [IDCardDestroyedBalanceLog] Drop Constraint [PK_IDCardDestroyedBalanceLog]; Alter Table [IDCardDestroyedBalanceLog] Add Constraint [PK_IDCardDestroyedBalanceLog] PRIMARY KEY CLUSTERED (IDCardDestroyedBalanceLogId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_IDCardDestroyedBalanceLog_LocationCd') BEGIN  Drop INDEX [IX_IDCardDestroyedBalanceLog_LocationCd] on [IDCardDestroyedBalanceLog]; END Create NONCLUSTERED INDEX [IX_IDCardDestroyedBalanceLog_LocationCd] on [IDCardDestroyedBalanceLog] ( LocationCd ASC)
Alter Table [IDCardTransaction] Drop Constraint [PK_IDCardTransactions]; Alter Table [IDCardTransaction] Add Constraint [PK_IDCardTransactions] PRIMARY KEY CLUSTERED (PrimaryTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_IDCardTransaction_LocationCd') BEGIN  Drop INDEX [IX_IDCardTransaction_LocationCd] on [IDCardTransaction]; END Create NONCLUSTERED INDEX [IX_IDCardTransaction_LocationCd] on [IDCardTransaction] ( LocationCd ASC)
Alter Table [InmateFlags] Drop Constraint [PK_InmateFlags]; Alter Table [InmateFlags] Add Constraint [PK_InmateFlags] PRIMARY KEY CLUSTERED (InmateFlagId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmateFlags_LocationCd') BEGIN  Drop INDEX [IX_InmateFlags_LocationCd] on [InmateFlags]; END Create NONCLUSTERED INDEX [IX_InmateFlags_LocationCd] on [InmateFlags] ( LocationCd ASC)
Alter Table [InmateFreePhoneNumbers] Drop Constraint [PK_InmateFreePhoneNumbers]; Alter Table [InmateFreePhoneNumbers] Add Constraint [PK_InmateFreePhoneNumbers] PRIMARY KEY CLUSTERED (PhoneNumber ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmateFreePhoneNumbers_LocationCd') BEGIN  Drop INDEX [IX_InmateFreePhoneNumbers_LocationCd] on [InmateFreePhoneNumbers]; END Create NONCLUSTERED INDEX [IX_InmateFreePhoneNumbers_LocationCd] on [InmateFreePhoneNumbers] ( LocationCd ASC)
Alter Table [InmatePhoneContact] Drop Constraint [PK_InmatePhoneContact]; Alter Table [InmatePhoneContact] Add Constraint [PK_InmatePhoneContact] PRIMARY KEY CLUSTERED (InmatePhoneContactId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmatePhoneContact_LocationCd') BEGIN  Drop INDEX [IX_InmatePhoneContact_LocationCd] on [InmatePhoneContact]; END Create NONCLUSTERED INDEX [IX_InmatePhoneContact_LocationCd] on [InmatePhoneContact] ( LocationCd ASC)
Alter Table [InmatePhoneNumberBlocks] Drop Constraint [PK_InmatePhoneNumberBlocks]; Alter Table [InmatePhoneNumberBlocks] Add Constraint [PK_InmatePhoneNumberBlocks] PRIMARY KEY CLUSTERED (InmatePhoneNumberBlockId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmatePhoneNumberBlocks_LocationCd') BEGIN  Drop INDEX [IX_InmatePhoneNumberBlocks_LocationCd] on [InmatePhoneNumberBlocks]; END Create NONCLUSTERED INDEX [IX_InmatePhoneNumberBlocks_LocationCd] on [InmatePhoneNumberBlocks] ( LocationCd ASC)
Alter Table [InmatePhoneNumberControls] Drop Constraint [PK_InmatePhoneNumberControls]; Alter Table [InmatePhoneNumberControls] Add Constraint [PK_InmatePhoneNumberControls] PRIMARY KEY CLUSTERED (InmatePhoneNumberControlId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmatePhoneNumberControls_LocationCd') BEGIN  Drop INDEX [IX_InmatePhoneNumberControls_LocationCd] on [InmatePhoneNumberControls]; END Create NONCLUSTERED INDEX [IX_InmatePhoneNumberControls_LocationCd] on [InmatePhoneNumberControls] ( LocationCd ASC)
Alter Table [InmatePhoneNumberReview] Drop Constraint [PK_InmatePhoneNumberReview]; Alter Table [InmatePhoneNumberReview] Add Constraint [PK_InmatePhoneNumberReview] PRIMARY KEY CLUSTERED (InmatePhoneNumberReviewId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InmatePhoneNumberReview_LocationCd') BEGIN  Drop INDEX [IX_InmatePhoneNumberReview_LocationCd] on [InmatePhoneNumberReview]; END Create NONCLUSTERED INDEX [IX_InmatePhoneNumberReview_LocationCd] on [InmatePhoneNumberReview] ( LocationCd ASC)
Alter Table [InventoryAdjustments] Drop Constraint [PK_InventoryAdjustments]; Alter Table [InventoryAdjustments] Add Constraint [PK_InventoryAdjustments] PRIMARY KEY CLUSTERED (AdjustmentId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_InventoryAdjustments_LocationCd') BEGIN  Drop INDEX [IX_InventoryAdjustments_LocationCd] on [InventoryAdjustments]; END Create NONCLUSTERED INDEX [IX_InventoryAdjustments_LocationCd] on [InventoryAdjustments] ( LocationCd ASC)
Alter Table [JPayTransactions] Drop Constraint [PK_JPayTransactions]; Alter Table [JPayTransactions] Add Constraint [PK_JPayTransactions] PRIMARY KEY CLUSTERED (JPayTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_JPayTransactions_LocationCd') BEGIN  Drop INDEX [IX_JPayTransactions_LocationCd] on [JPayTransactions]; END Create NONCLUSTERED INDEX [IX_JPayTransactions_LocationCd] on [JPayTransactions] ( LocationCd ASC)
Alter Table [KeefeTransactions] Drop Constraint [PK_KeefeTransactions]; Alter Table [KeefeTransactions] Add Constraint [PK_KeefeTransactions] PRIMARY KEY CLUSTERED (KeefeTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_KeefeTransactions_LocationCd') BEGIN  Drop INDEX [IX_KeefeTransactions_LocationCd] on [KeefeTransactions]; END Create NONCLUSTERED INDEX [IX_KeefeTransactions_LocationCd] on [KeefeTransactions] ( LocationCd ASC)
Alter Table [ManualChecks] Drop Constraint [PK_ManualChecks]; Alter Table [ManualChecks] Add Constraint [PK_ManualChecks] PRIMARY KEY CLUSTERED (ManualCheckId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_ManualChecks_LocationCd') BEGIN  Drop INDEX [IX_ManualChecks_LocationCd] on [ManualChecks]; END Create NONCLUSTERED INDEX [IX_ManualChecks_LocationCd] on [ManualChecks] ( Locationcd ASC)
Alter Table [NightlyComFailures] Drop Constraint [PK_NightlyComFailures]; Alter Table [NightlyComFailures] Add Constraint [PK_NightlyComFailures] PRIMARY KEY CLUSTERED (FailureID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_NightlyComFailures_LocationCd') BEGIN  Drop INDEX [IX_NightlyComFailures_LocationCd] on [NightlyComFailures]; END Create NONCLUSTERED INDEX [IX_NightlyComFailures_LocationCd] on [NightlyComFailures] ( LocationCd ASC)
Alter Table [NightlyCycleNoFailures] Drop Constraint [PK_NightlyCycleNoFailures]; Alter Table [NightlyCycleNoFailures] Add Constraint [PK_NightlyCycleNoFailures] PRIMARY KEY CLUSTERED (FailureID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_NightlyCycleNoFailures_LocationCd') BEGIN  Drop INDEX [IX_NightlyCycleNoFailures_LocationCd] on [NightlyCycleNoFailures]; END Create NONCLUSTERED INDEX [IX_NightlyCycleNoFailures_LocationCd] on [NightlyCycleNoFailures] ( LocationCd ASC)
Alter Table [OffenderAllowanceWorkAssignments] Drop Constraint [PK_OffenderAllowanceWorkAssignments]; Alter Table [OffenderAllowanceWorkAssignments] Add Constraint [PK_OffenderAllowanceWorkAssignments] PRIMARY KEY CLUSTERED (OffenderAllowanceWorkAssignmentId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_OffenderAllowanceWorkAssignments_LocationCd') BEGIN  Drop INDEX [IX_OffenderAllowanceWorkAssignments_LocationCd] on [OffenderAllowanceWorkAssignments]; END Create NONCLUSTERED INDEX [IX_OffenderAllowanceWorkAssignments_LocationCd] on [OffenderAllowanceWorkAssignments] ( LocationCd ASC)
Alter Table [OffenderCommissaryInformation] Drop Constraint [PK_OffenderCommissaryInformation]; Alter Table [OffenderCommissaryInformation] Add Constraint [PK_OffenderCommissaryInformation] PRIMARY KEY CLUSTERED (OffenderCommissaryInformationId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_OffenderCommissaryInformation_LocationCd') BEGIN  Drop INDEX [IX_OffenderCommissaryInformation_LocationCd] on [OffenderCommissaryInformation]; END Create NONCLUSTERED INDEX [IX_OffenderCommissaryInformation_LocationCd] on [OffenderCommissaryInformation] ( LocationCd ASC)
Alter Table [OmailCredits] Drop Constraint [PK_OmailCredits]; Alter Table [OmailCredits] Add Constraint [PK_OmailCredits] PRIMARY KEY CLUSTERED (OmailCreditId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_OmailCredits_LocationCd') BEGIN  Drop INDEX [IX_OmailCredits_LocationCd] on [OmailCredits]; END Create NONCLUSTERED INDEX [IX_OmailCredits_LocationCd] on [OmailCredits] ( LocationCd ASC)
Alter Table [PhoneCreditPhoneNumbers] Drop Constraint [PK_PhoneCreditPhoneNumbers]; Alter Table [PhoneCreditPhoneNumbers] Add Constraint [PK_PhoneCreditPhoneNumbers] PRIMARY KEY CLUSTERED (PrimaryTransactionID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_PhoneCreditPhoneNumbers_LocationCd') BEGIN  Drop INDEX [IX_PhoneCreditPhoneNumbers_LocationCd] on [PhoneCreditPhoneNumbers]; END Create NONCLUSTERED INDEX [IX_PhoneCreditPhoneNumbers_LocationCd] on [PhoneCreditPhoneNumbers] ( LocationCd ASC)
Alter Table [PhoneCredits] Drop Constraint [PK_PhoneCredits]; Alter Table [PhoneCredits] Add Constraint [PK_PhoneCredits] PRIMARY KEY CLUSTERED (PhoneCreditID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_PhoneCredits_LocationCd') BEGIN  Drop INDEX [IX_PhoneCredits_LocationCd] on [PhoneCredits]; END Create NONCLUSTERED INDEX [IX_PhoneCredits_LocationCd] on [PhoneCredits] ( LocationCd ASC)
Alter Table [PhoneCreditTransactionErrors] Drop Constraint [PK_PhoneCreditTransactionErrors]; Alter Table [PhoneCreditTransactionErrors] Add Constraint [PK_PhoneCreditTransactionErrors] PRIMARY KEY CLUSTERED (PhoneCreditTransactionErrorId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_PhoneCreditTransactionErrors_LocationCd') BEGIN  Drop INDEX [IX_PhoneCreditTransactionErrors_LocationCd] on [PhoneCreditTransactionErrors]; END Create NONCLUSTERED INDEX [IX_PhoneCreditTransactionErrors_LocationCd] on [PhoneCreditTransactionErrors] ( LocationCd ASC)
Alter Table [PhoneCreditTransactions] Drop Constraint [PK_PhoneCreditTransactions]; Alter Table [PhoneCreditTransactions] Add Constraint [PK_PhoneCreditTransactions] PRIMARY KEY CLUSTERED (MoneyOnHoldId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_PhoneCreditTransactions_LocationCd') BEGIN  Drop INDEX [IX_PhoneCreditTransactions_LocationCd] on [PhoneCreditTransactions]; END Create NONCLUSTERED INDEX [IX_PhoneCreditTransactions_LocationCd] on [PhoneCreditTransactions] ( LocationCd ASC)
Alter Table [Reconciliation] Drop Constraint [PK_Reconciliation]; Alter Table [Reconciliation] Add Constraint [PK_Reconciliation] PRIMARY KEY CLUSTERED (ReconciliationId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Reconciliation_LocationCd') BEGIN  Drop INDEX [IX_Reconciliation_LocationCd] on [Reconciliation]; END Create NONCLUSTERED INDEX [IX_Reconciliation_LocationCd] on [Reconciliation] ( LocationCd ASC)
Alter Table [ScreensInUse] Drop Constraint [PK_ScreensInUse]; Alter Table [ScreensInUse] Add Constraint [PK_ScreensInUse] PRIMARY KEY CLUSTERED (ScreenInUseId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_ScreensInUse_LocationCd') BEGIN  Drop INDEX [IX_ScreensInUse_LocationCd] on [ScreensInUse]; END Create NONCLUSTERED INDEX [IX_ScreensInUse_LocationCd] on [ScreensInUse] ( LocationCd ASC)
Alter Table [Sender] Drop Constraint [PK_Sender]; Alter Table [Sender] Add Constraint [PK_Sender] PRIMARY KEY CLUSTERED (SenderId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Sender_LocationCd') BEGIN  Drop INDEX [IX_Sender_LocationCd] on [Sender]; END Create NONCLUSTERED INDEX [IX_Sender_LocationCd] on [Sender] ( LocationCd ASC)
Alter Table [SenderInformation] Drop Constraint [PK_SenderInformation]; Alter Table [SenderInformation] Add Constraint [PK_SenderInformation] PRIMARY KEY CLUSTERED (SenderID ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_SenderInformation_LocationCd') BEGIN  Drop INDEX [IX_SenderInformation_LocationCd] on [SenderInformation]; END Create NONCLUSTERED INDEX [IX_SenderInformation_LocationCd] on [SenderInformation] ( LocationCd ASC)
Alter Table [StockReceipts] Drop Constraint [PK_StockReceipts]; Alter Table [StockReceipts] Add Constraint [PK_StockReceipts] PRIMARY KEY CLUSTERED (ReceiptId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_StockReceipts_LocationCd') BEGIN  Drop INDEX [IX_StockReceipts_LocationCd] on [StockReceipts]; END Create NONCLUSTERED INDEX [IX_StockReceipts_LocationCd] on [StockReceipts] ( LocationCd ASC)
Alter Table [TempAllowanceElectronicImportDetail] Drop Constraint [PK_TempAllowanceElectronicImportDetail]; Alter Table [TempAllowanceElectronicImportDetail] Add Constraint [PK_TempAllowanceElectronicImportDetail] PRIMARY KEY CLUSTERED (AllowanceElectronicImportDetailId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TempAllowanceElectronicImportDetail_LocationCd') BEGIN  Drop INDEX [IX_TempAllowanceElectronicImportDetail_LocationCd] on [TempAllowanceElectronicImportDetail]; END Create NONCLUSTERED INDEX [IX_TempAllowanceElectronicImportDetail_LocationCd] on [TempAllowanceElectronicImportDetail] ( LocationCd ASC)
Alter Table [TempCheckRoster] Drop Constraint [PK_TempCheckRoster]; Alter Table [TempCheckRoster] Add Constraint [PK_TempCheckRoster] PRIMARY KEY CLUSTERED (PrimaryTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TempCheckRoster_LocationCd') BEGIN  Drop INDEX [IX_TempCheckRoster_LocationCd] on [TempCheckRoster]; END Create NONCLUSTERED INDEX [IX_TempCheckRoster_LocationCd] on [TempCheckRoster] ( LocationCd ASC)
Alter Table [TempChecks] Drop Constraint [PK_TempChecks]; Alter Table [TempChecks] Add Constraint [PK_TempChecks] PRIMARY KEY CLUSTERED (CheckNo ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TempChecks_LocationCd') BEGIN  Drop INDEX [IX_TempChecks_LocationCd] on [TempChecks]; END Create NONCLUSTERED INDEX [IX_TempChecks_LocationCd] on [TempChecks] ( LocationCd ASC)
Alter Table [TempManualCheckRoster] Drop Constraint [PK_TempManualCheckRoster]; Alter Table [TempManualCheckRoster] Add Constraint [PK_TempManualCheckRoster] PRIMARY KEY CLUSTERED (ManualCheckId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TempManualCheckRoster_LocationCd') BEGIN  Drop INDEX [IX_TempManualCheckRoster_LocationCd] on [TempManualCheckRoster]; END Create NONCLUSTERED INDEX [IX_TempManualCheckRoster_LocationCd] on [TempManualCheckRoster] ( LocationCd ASC)
Alter Table [TouchPayTransactions] Drop Constraint [PK_TouchPayTransactions]; Alter Table [TouchPayTransactions] Add Constraint [PK_TouchPayTransactions] PRIMARY KEY CLUSTERED (TouchPayTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TouchPayTransactions_LocationCd') BEGIN  Drop INDEX [IX_TouchPayTransactions_LocationCd] on [TouchPayTransactions]; END Create NONCLUSTERED INDEX [IX_TouchPayTransactions_LocationCd] on [TouchPayTransactions] ( LocationCd ASC)
Alter Table [UserLocations] Drop Constraint [PK_UserLocations]; Alter Table [UserLocations] Add Constraint [PK_UserLocations] PRIMARY KEY CLUSTERED (UserLocationId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_UserLocations_LocationCd') BEGIN  Drop INDEX [IX_UserLocations_LocationCd] on [UserLocations]; END Create NONCLUSTERED INDEX [IX_UserLocations_LocationCd] on [UserLocations] ( LocationCd ASC)
Alter Table [WrittenChecks] Drop Constraint [PK_WrittenChecks]; Alter Table [WrittenChecks] Add Constraint [PK_WrittenChecks] PRIMARY KEY CLUSTERED (WrittenCheckId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_WrittenChecks_LocationCd') BEGIN  Drop INDEX [IX_WrittenChecks_LocationCd] on [WrittenChecks]; END Create NONCLUSTERED INDEX [IX_WrittenChecks_LocationCd] on [WrittenChecks] ( LocationCd ASC)
Alter Table [WUnionTransactions] Drop Constraint [PK_WUnionTransactions]; Alter Table [WUnionTransactions] Add Constraint [PK_WUnionTransactions] PRIMARY KEY CLUSTERED (WUnionTransactionId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_WUnionTransactions_LocationCd') BEGIN  Drop INDEX [IX_WUnionTransactions_LocationCd] on [WUnionTransactions]; END Create NONCLUSTERED INDEX [IX_WUnionTransactions_LocationCd] on [WUnionTransactions] ( LocationCd ASC)


-- with 2 cols but table doesn't include locationcd
ALTER TABLE [dbo].[ScreenUsers] DROP CONSTRAINT [PK_ScreenUsers] WITH ( ONLINE = OFF )
ALTER TABLE [dbo].[ScreenUsers] ADD  CONSTRAINT [PK_ScreenUsers] PRIMARY KEY CLUSTERED 
(
	[ScreenId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
Create NONCLUSTERED INDEX [IX_ScreenUsers_UserID] on [dbo].[ScreenUsers] ( [UserId] ASC)




-- History Tables

Alter Table [CBCFees_H] Drop Constraint [PK_CBCFees_H]; Alter Table [CBCFees_H] Add Constraint [PK_CBCFees_H] PRIMARY KEY CLUSTERED (CBCFeeAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CBCFees_H_LocationCd') BEGIN  Drop INDEX [IX_CBCFees_H_LocationCd] on [CBCFees_H]; END Create NONCLUSTERED INDEX [IX_CBCFees_H_LocationCd] on [CBCFees_H] ( LocationCd ASC)
Alter Table [ChildSupport_H] Drop Constraint [PK_ChildSupport_H]; Alter Table [ChildSupport_H] Add Constraint [PK_ChildSupport_H] PRIMARY KEY CLUSTERED (ChildSupportAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_ChildSupport_H_LocationCd') BEGIN  Drop INDEX [IX_ChildSupport_H_LocationCd] on [ChildSupport_H]; END Create NONCLUSTERED INDEX [IX_ChildSupport_H_LocationCd] on [ChildSupport_H] ( LocationCd ASC)
Alter Table [CourtFilingFees_H] Drop Constraint [PK_CourtFilingFees_H]; Alter Table [CourtFilingFees_H] Add Constraint [PK_CourtFilingFees_H] PRIMARY KEY CLUSTERED (CourtFilingFeeAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_CourtFilingFees_H_LocationCd') BEGIN  Drop INDEX [IX_CourtFilingFees_H_LocationCd] on [CourtFilingFees_H]; END Create NONCLUSTERED INDEX [IX_CourtFilingFees_H_LocationCd] on [CourtFilingFees_H] ( LocationCd ASC)
Alter Table [dmAllowancesWorkAssign_H] Drop Constraint [PK_dmAllowancesWorkAssign_H]; Alter Table [dmAllowancesWorkAssign_H] Add Constraint [PK_dmAllowancesWorkAssign_H] PRIMARY KEY CLUSTERED (AllowancesWorkAssignId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmAllowancesWorkAssign_H_LocationCd') BEGIN  Drop INDEX [IX_dmAllowancesWorkAssign_H_LocationCd] on [dmAllowancesWorkAssign_H]; END Create NONCLUSTERED INDEX [IX_dmAllowancesWorkAssign_H_LocationCd] on [dmAllowancesWorkAssign_H] ( LocationCd ASC)
Alter Table [dmObligationTypes_H] Drop Constraint [PK_dmObligationTypes_H]; Alter Table [dmObligationTypes_H] Add Constraint [PK_dmObligationTypes_H] PRIMARY KEY CLUSTERED (ObligationTypeId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmObligationTypes_H_LocationCd') BEGIN  Drop INDEX [IX_dmObligationTypes_H_LocationCd] on [dmObligationTypes_H]; END Create NONCLUSTERED INDEX [IX_dmObligationTypes_H_LocationCd] on [dmObligationTypes_H] ( LocationCd ASC)
Alter Table [dmRestitutionType_H] Drop Constraint [PK_dmRestitutionType_H]; Alter Table [dmRestitutionType_H] Add Constraint [PK_dmRestitutionType_H] PRIMARY KEY CLUSTERED (RestitutionTypeId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_dmRestitutionType_H_LocationCd') BEGIN  Drop INDEX [IX_dmRestitutionType_H_LocationCd] on [dmRestitutionType_H]; END Create NONCLUSTERED INDEX [IX_dmRestitutionType_H_LocationCd] on [dmRestitutionType_H] ( LocationCd ASC)
Alter Table [DOCSanctions_H] Drop Constraint [PK_DOCSanctions_H]; Alter Table [DOCSanctions_H] Add Constraint [PK_DOCSanctions_H] PRIMARY KEY CLUSTERED (DOCSanctionAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_DOCSanctions_H_LocationCd') BEGIN  Drop INDEX [IX_DOCSanctions_H_LocationCd] on [DOCSanctions_H]; END Create NONCLUSTERED INDEX [IX_DOCSanctions_H_LocationCd] on [DOCSanctions_H] ( LocationCd ASC)
Alter Table [H_dmInterventionClassFacilitators] Drop Constraint [PK_H_dmInterventionClassFacilitators]; Alter Table [H_dmInterventionClassFacilitators] Add Constraint [PK_H_dmInterventionClassFacilitators] PRIMARY KEY CLUSTERED (H_InterventionClassFacilitatorId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_dmInterventionClassFacilitators_LocationCd') BEGIN  Drop INDEX [IX_H_dmInterventionClassFacilitators_LocationCd] on [H_dmInterventionClassFacilitators]; END Create NONCLUSTERED INDEX [IX_H_dmInterventionClassFacilitators_LocationCd] on [H_dmInterventionClassFacilitators] ( LocationCd ASC)
Alter Table [H_Groups] Drop Constraint [PK_H_Groups]; Alter Table [H_Groups] Add Constraint [PK_H_Groups] PRIMARY KEY CLUSTERED (H_GroupId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_Groups_LocationCd') BEGIN  Drop INDEX [IX_H_Groups_LocationCd] on [H_Groups]; END Create NONCLUSTERED INDEX [IX_H_Groups_LocationCd] on [H_Groups] ( LocationCd ASC)
Alter Table [H_GroupUsers] Drop Constraint [PK_H_GroupUsers]; Alter Table [H_GroupUsers] Add Constraint [PK_H_GroupUsers] PRIMARY KEY CLUSTERED (H_GroupUserId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_GroupUsers_LocationCd') BEGIN  Drop INDEX [IX_H_GroupUsers_LocationCd] on [H_GroupUsers]; END Create NONCLUSTERED INDEX [IX_H_GroupUsers_LocationCd] on [H_GroupUsers] ( LocationCd ASC)
Alter Table [H_OffenderInterventionClassFacilitators] Drop Constraint [PK_H_OffenderInterventionClassFacilitators]; Alter Table [H_OffenderInterventionClassFacilitators] Add Constraint [PK_H_OffenderInterventionClassFacilitators] PRIMARY KEY CLUSTERED (H_OffenderInterventionClassFacilitatorId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_OffenderInterventionClassFacilitators_LocationCd') BEGIN  Drop INDEX [IX_H_OffenderInterventionClassFacilitators_LocationCd] on [H_OffenderInterventionClassFacilitators]; END Create NONCLUSTERED INDEX [IX_H_OffenderInterventionClassFacilitators_LocationCd] on [H_OffenderInterventionClassFacilitators] ( LocationCd ASC)
Alter Table [H_UserLocations] Drop Constraint [PK_H_UserLocations]; Alter Table [H_UserLocations] Add Constraint [PK_H_UserLocations] PRIMARY KEY CLUSTERED (H_UserLocationId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_UserLocations_LocationCd') BEGIN  Drop INDEX [IX_H_UserLocations_LocationCd] on [H_UserLocations]; END Create NONCLUSTERED INDEX [IX_H_UserLocations_LocationCd] on [H_UserLocations] ( LocationCd ASC)
Alter Table [H_Users] Drop Constraint [PK_H_Users]; Alter Table [H_Users] Add Constraint [PK_H_Users] PRIMARY KEY CLUSTERED (H_UserId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_H_Users_LocationCd') BEGIN  Drop INDEX [IX_H_Users_LocationCd] on [H_Users]; END Create NONCLUSTERED INDEX [IX_H_Users_LocationCd] on [H_Users] ( LocationCd ASC)
Alter Table [JPayBatch] Drop Constraint [PK_JPayBatch]; Alter Table [JPayBatch] Add Constraint [PK_JPayBatch] PRIMARY KEY CLUSTERED (JPayBatchId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_JPayBatch_LocationCd') BEGIN  Drop INDEX [IX_JPayBatch_LocationCd] on [JPayBatch]; END Create NONCLUSTERED INDEX [IX_JPayBatch_LocationCd] on [JPayBatch] ( LocationCd ASC)
Alter Table [KeefeBatch] Drop Constraint [PK_KeefeBatch]; Alter Table [KeefeBatch] Add Constraint [PK_KeefeBatch] PRIMARY KEY CLUSTERED (KeefeBatchId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_KeefeBatch_LocationCd') BEGIN  Drop INDEX [IX_KeefeBatch_LocationCd] on [KeefeBatch]; END Create NONCLUSTERED INDEX [IX_KeefeBatch_LocationCd] on [KeefeBatch] ( LocationCd ASC)
Alter Table [OffenderCommissaryInformation_H] Drop Constraint [PK_OffenderCommissaryInformation_H]; Alter Table [OffenderCommissaryInformation_H] Add Constraint [PK_OffenderCommissaryInformation_H] PRIMARY KEY CLUSTERED (OffenderCommissaryInformationId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_OffenderCommissaryInformation_H_LocationCd') BEGIN  Drop INDEX [IX_OffenderCommissaryInformation_H_LocationCd] on [OffenderCommissaryInformation_H]; END Create NONCLUSTERED INDEX [IX_OffenderCommissaryInformation_H_LocationCd] on [OffenderCommissaryInformation_H] ( LocationCd ASC)
Alter Table [PrimaryAccount_H] Drop Constraint [PK_PrimaryAccount_H]; Alter Table [PrimaryAccount_H] Add Constraint [PK_PrimaryAccount_H] PRIMARY KEY CLUSTERED (PrimaryAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_PrimaryAccount_H_LocationCd') BEGIN  Drop INDEX [IX_PrimaryAccount_H_LocationCd] on [PrimaryAccount_H]; END Create NONCLUSTERED INDEX [IX_PrimaryAccount_H_LocationCd] on [PrimaryAccount_H] ( LocationCd ASC)
Alter Table [Restitution_H] Drop Constraint [PK_Restitution_H]; Alter Table [Restitution_H] Add Constraint [PK_Restitution_H] PRIMARY KEY CLUSTERED (RestitutionAcctId_H ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_Restitution_H_LocationCd') BEGIN  Drop INDEX [IX_Restitution_H_LocationCd] on [Restitution_H]; END Create NONCLUSTERED INDEX [IX_Restitution_H_LocationCd] on [Restitution_H] ( LocationCd ASC)
Alter Table [TouchPayBatch] Drop Constraint [PK_TouchPayBatch]; Alter Table [TouchPayBatch] Add Constraint [PK_TouchPayBatch] PRIMARY KEY CLUSTERED (TouchPayBatchId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_TouchPayBatch_LocationCd') BEGIN  Drop INDEX [IX_TouchPayBatch_LocationCd] on [TouchPayBatch]; END Create NONCLUSTERED INDEX [IX_TouchPayBatch_LocationCd] on [TouchPayBatch] ( LocationCd ASC)
Alter Table [WUnionBatch] Drop Constraint [PK_WUnionBatch]; Alter Table [WUnionBatch] Add Constraint [PK_WUnionBatch] PRIMARY KEY CLUSTERED (WUnionBatchId ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100); IF EXISTS(SELECT NAME FROM SYS.INDEXES WHERE NAME = 'IX_WUnionBatch_LocationCd') BEGIN  Drop INDEX [IX_WUnionBatch_LocationCd] on [WUnionBatch]; END Create NONCLUSTERED INDEX [IX_WUnionBatch_LocationCd] on [WUnionBatch] ( LocationCd ASC)
